{"ast":null,"code":"import speedometer from \"./speedometer.js\";\nimport throttle from \"./throttle.js\";\nimport utils from \"../utils.js\";\nexport const progressEventReducer = function (listener, isDownloadStream) {\n  let freq = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 3;\n  let bytesNotified = 0;\n\n  const _speedometer = speedometer(50, 250);\n\n  return throttle(e => {\n    const loaded = e.loaded;\n    const total = e.lengthComputable ? e.total : undefined;\n    const progressBytes = loaded - bytesNotified;\n\n    const rate = _speedometer(progressBytes);\n\n    const inRange = loaded <= total;\n    bytesNotified = loaded;\n    const data = {\n      loaded,\n      total,\n      progress: total ? loaded / total : undefined,\n      bytes: progressBytes,\n      rate: rate ? rate : undefined,\n      estimated: rate && total && inRange ? (total - loaded) / rate : undefined,\n      event: e,\n      lengthComputable: total != null,\n      [isDownloadStream ? 'download' : 'upload']: true\n    };\n    listener(data);\n  }, freq);\n};\nexport const progressEventDecorator = (total, throttled) => {\n  const lengthComputable = total != null;\n  return [loaded => throttled[0]({\n    lengthComputable,\n    total,\n    loaded\n  }), throttled[1]];\n};\nexport const asyncDecorator = fn => function () {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  return utils.asap(() => fn(...args));\n};","map":{"version":3,"sources":["/Users/prarthnaluthra/Desktop/netflix/node_modules/axios/lib/helpers/progressEventReducer.js"],"names":["speedometer","throttle","utils","progressEventReducer","listener","isDownloadStream","freq","bytesNotified","_speedometer","e","loaded","total","lengthComputable","undefined","progressBytes","rate","inRange","data","progress","bytes","estimated","event","progressEventDecorator","throttled","asyncDecorator","fn","args","asap"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,kBAAxB;AACA,OAAOC,QAAP,MAAqB,eAArB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAEA,OAAO,MAAMC,oBAAoB,GAAG,UAACC,QAAD,EAAWC,gBAAX,EAA0C;AAAA,MAAbC,IAAa,uEAAN,CAAM;AAC5E,MAAIC,aAAa,GAAG,CAApB;;AACA,QAAMC,YAAY,GAAGR,WAAW,CAAC,EAAD,EAAK,GAAL,CAAhC;;AAEA,SAAOC,QAAQ,CAACQ,CAAC,IAAI;AACnB,UAAMC,MAAM,GAAGD,CAAC,CAACC,MAAjB;AACA,UAAMC,KAAK,GAAGF,CAAC,CAACG,gBAAF,GAAqBH,CAAC,CAACE,KAAvB,GAA+BE,SAA7C;AACA,UAAMC,aAAa,GAAGJ,MAAM,GAAGH,aAA/B;;AACA,UAAMQ,IAAI,GAAGP,YAAY,CAACM,aAAD,CAAzB;;AACA,UAAME,OAAO,GAAGN,MAAM,IAAIC,KAA1B;AAEAJ,IAAAA,aAAa,GAAGG,MAAhB;AAEA,UAAMO,IAAI,GAAG;AACXP,MAAAA,MADW;AAEXC,MAAAA,KAFW;AAGXO,MAAAA,QAAQ,EAAEP,KAAK,GAAID,MAAM,GAAGC,KAAb,GAAsBE,SAH1B;AAIXM,MAAAA,KAAK,EAAEL,aAJI;AAKXC,MAAAA,IAAI,EAAEA,IAAI,GAAGA,IAAH,GAAUF,SALT;AAMXO,MAAAA,SAAS,EAAEL,IAAI,IAAIJ,KAAR,IAAiBK,OAAjB,GAA2B,CAACL,KAAK,GAAGD,MAAT,IAAmBK,IAA9C,GAAqDF,SANrD;AAOXQ,MAAAA,KAAK,EAAEZ,CAPI;AAQXG,MAAAA,gBAAgB,EAAED,KAAK,IAAI,IARhB;AASX,OAACN,gBAAgB,GAAG,UAAH,GAAgB,QAAjC,GAA4C;AATjC,KAAb;AAYAD,IAAAA,QAAQ,CAACa,IAAD,CAAR;AACD,GAtBc,EAsBZX,IAtBY,CAAf;AAuBD,CA3BM;AA6BP,OAAO,MAAMgB,sBAAsB,GAAG,CAACX,KAAD,EAAQY,SAAR,KAAsB;AAC1D,QAAMX,gBAAgB,GAAGD,KAAK,IAAI,IAAlC;AAEA,SAAO,CAAED,MAAD,IAAYa,SAAS,CAAC,CAAD,CAAT,CAAa;AAC/BX,IAAAA,gBAD+B;AAE/BD,IAAAA,KAF+B;AAG/BD,IAAAA;AAH+B,GAAb,CAAb,EAIHa,SAAS,CAAC,CAAD,CAJN,CAAP;AAKD,CARM;AAUP,OAAO,MAAMC,cAAc,GAAIC,EAAD,IAAQ;AAAA,oCAAIC,IAAJ;AAAIA,IAAAA,IAAJ;AAAA;;AAAA,SAAaxB,KAAK,CAACyB,IAAN,CAAW,MAAMF,EAAE,CAAC,GAAGC,IAAJ,CAAnB,CAAb;AAAA,CAA/B","sourcesContent":["import speedometer from \"./speedometer.js\";\nimport throttle from \"./throttle.js\";\nimport utils from \"../utils.js\";\n\nexport const progressEventReducer = (listener, isDownloadStream, freq = 3) => {\n  let bytesNotified = 0;\n  const _speedometer = speedometer(50, 250);\n\n  return throttle(e => {\n    const loaded = e.loaded;\n    const total = e.lengthComputable ? e.total : undefined;\n    const progressBytes = loaded - bytesNotified;\n    const rate = _speedometer(progressBytes);\n    const inRange = loaded <= total;\n\n    bytesNotified = loaded;\n\n    const data = {\n      loaded,\n      total,\n      progress: total ? (loaded / total) : undefined,\n      bytes: progressBytes,\n      rate: rate ? rate : undefined,\n      estimated: rate && total && inRange ? (total - loaded) / rate : undefined,\n      event: e,\n      lengthComputable: total != null,\n      [isDownloadStream ? 'download' : 'upload']: true\n    };\n\n    listener(data);\n  }, freq);\n}\n\nexport const progressEventDecorator = (total, throttled) => {\n  const lengthComputable = total != null;\n\n  return [(loaded) => throttled[0]({\n    lengthComputable,\n    total,\n    loaded\n  }), throttled[1]];\n}\n\nexport const asyncDecorator = (fn) => (...args) => utils.asap(() => fn(...args));\n"]},"metadata":{},"sourceType":"module"}